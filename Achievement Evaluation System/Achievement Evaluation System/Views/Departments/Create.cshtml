@model Achievement_Evaluation_System.Models.Department

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Department</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Department_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Acronym, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Acronym, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Acronym, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ManagerID, new SelectList(new List<Achievement_Evaluation_System.Models.Employee>{
                                                                                @foreach(Achievement_Evaluation_System.Models.Employee emp in ViewBag.Employees) {
                                                                                    new { value = emp.ID, text = emp.Fname + " " + emp.Mname + " " + emp.Lname),
                                                                                },
                                                                                "value",
                                                                                "text",
                                                                                2))
                                @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                        </div>
                                </div>
            
                        <div class="form-group">
            @Html.LabelFor(model => model.Department_description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Department_description, new { @class = "form-control", rows = 10, cols = 100 })
                @Html.ValidationMessageFor(model => model.Department_description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
